# MySQL DB elements
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mysql
  template:
    metadata:
      labels:
        name: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: badgrdb
        - name: MYSQL_USER
          value: badgruser
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: rootpassword
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-db-init
          mountPath: /docker-entrypoint-initdb.d #https://hub.docker.com/_/mysql Refer Initializing a fresh instance
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql
      - name: mysql-db-init
        configMap:
          name: mysql-db-init
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - name: mysql
      port: 3306
  selector:
    name: mysql


# Badgr Server elements
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: badgrserver-mediafiles
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: badgrserver
spec:
  replicas: 1
  selector:
    matchLabels:
      name: badgrserver
  template:
    metadata:
      labels:
        name: badgrserver
    spec:
      containers:
        - name: badgrserver
          image: eoscsynergy/badgr-server:v2.24.1-2
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
          ports:
          - containerPort: 8000
            protocol: TCP
            name: http
          - containerPort: 8443
            protocol: TCP
            name: https
          volumeMounts:
           - name: badgrserver-settings
             mountPath: /badgr/code/apps/mainsite/settings_local.py
             subPath: settings_local.py
           - name: badgrserver-certificate
             mountPath: /etc/ssl/certs/server.crt
             subPath: server.crt
           - name: badgrserver-certificate
             mountPath: /etc/ssl/certs/server.key
             subPath: server.key
           - name: badgrserver-mediafiles
             mountPath: /badgr/code/mediafiles
          livenessProbe:
            httpGet:
              path: /docs/v2
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
      volumes:
        - name: badgrserver-settings
          configMap:
            name: badgrserver
        - name: badgrserver-certificate
          secret:
            secretName: badgrserver
        - name: badgrserver-mediafiles
          persistentVolumeClaim:
            claimName: badgrserver-mediafiles
---
apiVersion: v1
kind: Service
metadata:
  name: badgrserver
spec:
  type: NodePort
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
      nodePort: 8000
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
      nodePort: 8443
  selector:
    name: badgrserver


# Badgr UI elements
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: badgrui
spec:
  replicas: 1
  selector:
    matchLabels:
      name: badgrui
  template:
    metadata:
      labels:
        name: badgrui
    spec:
      containers:
        - name: badgrui
          image: eoscsynergy/badgr-ui:v2.24.45-3
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
          env:
          - name: BADGRSERVER
            value: "https://BADGRSERVER_IP:8443"
          - name: BASE_DIR
            value: /badgr/
          ports:
          - containerPort: 80
            protocol: TCP
            name: http
          volumeMounts:
           - name: badgrui-nginx
             mountPath: /etc/nginx/nginx.conf
             subPath: nginx.conf
          livenessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
      volumes:
        - name: badgrui-nginx
          configMap:
            name: badgrui
---
apiVersion: v1
kind: Service
metadata:
  name: badgrui
spec:
  ports:
    - name: http
      port: 80
  selector:
    name: badgrui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: badgrui
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /badgr
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
        - pathType: Prefix
          path: /badgr/(.*)
          backend:
            service:
              name: badgrui
              port:
                number: 80